error[E0271]: type mismatch resolving `<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<posts::columns::title, diesel::internal::derives::as_expression::Bound<diesel::sql_types::Text, &str>>> as AsChangeset>::Target == users::table`
  --> tests/fail/update_requires_column_be_from_same_table.rs:22:33
   |
22 |     let command = update(users).set(posts::title.eq("Hello"));
   |                                 ^^^ expected struct `posts::table`, found struct `users::table`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/update_requires_column_be_from_same_table.rs:23:33
   |
23 |     let command = update(users).set(name.eq(posts::title));
   |                                 ^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::title`
   = note: required because of the requirements on the impl of `AsChangeset` for `diesel::expression::operators::Eq<users::columns::name, posts::columns::title>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/update_requires_column_be_from_same_table.rs:23:33
   |
23 |     let command = update(users).set(name.eq(posts::title));
   |                                 ^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::title`
   = note: required because of the requirements on the impl of `AsChangeset` for `diesel::expression::operators::Eq<users::columns::name, posts::columns::title>`
