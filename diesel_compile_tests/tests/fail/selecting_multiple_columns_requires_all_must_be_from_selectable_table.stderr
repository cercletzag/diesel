error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:21:37
   |
21 |     let stuff = users::table.select((posts::id, posts::user_id));
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = help: the following implementations were found:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
           and 2 others
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, posts::columns::user_id)>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `posts::columns::user_id: SelectableExpression<users::table>` is not satisfied
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:21:37
   |
21 |     let stuff = users::table.select((posts::id, posts::user_id));
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::user_id`
   |
   = help: the following implementations were found:
             <posts::columns::user_id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::user_id as SelectableExpression<Only<posts::table>>>
             <posts::columns::user_id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::user_id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
           and 2 others
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, posts::columns::user_id)>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:21:30
   |
21 |     let stuff = users::table.select((posts::id, posts::user_id));
   |                              ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, posts::columns::user_id)>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:21:30
   |
21 |     let stuff = users::table.select((posts::id, posts::user_id));
   |                              ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::user_id)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, posts::columns::user_id)>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:22:37
   |
22 |     let stuff = users::table.select((posts::id, users::name));
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
   |
   = help: the following implementations were found:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
           and 2 others
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, users::columns::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, users::columns::name)>` for `SelectStatement<FromClause<users::table>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:22:30
   |
22 |     let stuff = users::table.select((posts::id, users::name));
   |                              ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, users::columns::name)`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, users::columns::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, users::columns::name)>` for `SelectStatement<FromClause<users::table>>`

error[E0277]: the trait bound `users::table: TableNotEqual<posts::table>` is not satisfied
  --> tests/fail/selecting_multiple_columns_requires_all_must_be_from_selectable_table.rs:22:30
   |
22 |     let stuff = users::table.select((posts::id, users::name));
   |                              ^^^^^^ the trait `TableNotEqual<posts::table>` is not implemented for `users::table`
   |
   = note: required because of the requirements on the impl of `AppearsInFromClause<posts::table>` for `users::table`
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, users::columns::name)`
   = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, users::columns::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(posts::columns::id, users::columns::name)>` for `SelectStatement<FromClause<users::table>>`
